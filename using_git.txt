Git Workflow

Git repository consists of three "trees"
1. Working Directory - holds the actual files
2. Index - acts as a staging area
3. HEAD  - points to the last commit made


Branching

Branches are used to develop features isolated from each other.
The master branch is the default.

1. To create a new branch and switch to it
   git checkout -b new_branch
2. Push branch to remote repository
   git push origin new_branch  
3. Switch back to master
   git checkout master
4. Delete branch
   git branch -d new_branch


Setting up git on Remote Server

1. su -
2. useradd git
3. yum install git or apt-get install git
4. su - git
5. mkdir /home/git/.ssh 
6. git init --bare my-project.git
7. git show


Local machine 

1. ssh-keygen 
2. cat .ssh/id_rsa.pub | ssh git@ungulate.cwillenterprise.com "cat >> 
~/.ssh/authorized_keys"
3. mkdir my-project.git && cd my-project.git
4. git init 
5. git config --global user.name 'cwill' && git config --global user.email 
'cwill@gmail.com'
6.
  a. Remote Configuration new repo 
   git remote add origin git@ungulate.cwillenterprise.com:my-project.git
  b. Use to push existing local repo to server
   git remote set-url origin git@ungulate.cwillenterprise.com:my-project.git
  c. Show config file
    git config --list
7. Create or copy files to my-project.git directory
8. git status
9. git add filename or git add -A
10. git commit filename -m "Change comments"
11. git log 
12. Copy local repo to Remote server
    git push origin master
13. To update local repository to new commit
    git pull
 

Checkout a repository

1.a (Local)
  git clone /path/to/repo
 b (remote)
  git clone git@host:/path/to/repo

2.a (Replace a local changes )
   git chekout -- filename
 b (drop all  local changes and commits)
   git fetch origin
   git reset --hard origin/master 


Mange Remote Repository 

1. git remote -v
2. git remote --remove origin


Force local repo to match remote

1. git fetch origin
2. git reset --hard origin/master
3. git clean --dry-run -f (remove local files)  

